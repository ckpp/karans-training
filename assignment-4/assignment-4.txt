[KARANS FOURTH ASSIGNMENT]

INSTRUCTOR: KAMRAN AMINI  <KAM.CPP@GMAIL.COM>
18 AUG 2014


RULES
-----
1- Do it yourself! Help others! Ask help! But write your own source code!
2- You can push your source code ONLY until Saturday 19th July 2014 12:00 PM.
3- Push your code on https://github.com/kamcpp/karans-training.git. A folder
   is made for assignment 1.
4- You should use following concepts:
   - IoC
   - Dependency Injection and Strategy design pattern
   - Spring Context and Beans Frameworks
   - Exception Handling and custom exceptions
   - XML parsing
   - JSON parsing
   - Annotations
   - Reflection
   - Generic classes
   - Memory Management tips
   - Multithreading and related design patterns like ThreadPool
   - Socket PRogramming
   - RPC fundamental concepts
   - Testing frameworks like Mockito, JUnit
   - AOP if applicable.
5- Your design should be as abstract as possible.
6- Naming conventions MATTERS A LOT! Follow them please :-) !
7- You should use Maven to compile, test and deploy your final release.
8- TEST DRIVEN DEVELOPMENT! Don't forget to write tests! Classes without
   tests are not that trusted!


ASSIGNMENT
----------

In fourth assignment, we want to design and implement a Search Engine. As you
already know, a Search Engine retrieves a web page and makes an index according
to the content. Then, it will search for other links in the content and make
further requests to those found links. Your Search Engine should start from
a given URL and crawls on all links from there. Also, it has a command line
interface and accepts Search Queries and show the results. It should have 
following features:

  1- It should be multi-user. This means it should be able to serve many users
     at once for their search queries.
  2- Search Engine is always crawling the web. So, crawling and indexing should
     be running while users are making their search queries.

Command line interface and its commands are up to you.

OVER AND OUT.
