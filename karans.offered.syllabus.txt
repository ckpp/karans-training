Java {    
    JSE {
        Procedural Programming in Java {
            Control Structures
            Enumerations
            Boxing and Unboxing
            Arrays
            Functions
        }
        Object Oriented Programming in Java {
            Classes
            Objects
            Encapsulation
            Composition
            Immutable objects
            Why immutable objects? Concurrency, Light copies, Functional Programming
            Clonnabale objects
            Stateful + Stateless objects
            Inner + Anonymous classes
            Static classes
            JavaBean + POJO classes
            Prototypes
            Object Copy and Object Pool
            Inheritance
            Polymorphism
        }
        Memory Model in Java {
            Memory Allocation in Java
            References
            Garbage Collection
            Finalization in Java
        }

        Advanced OOP Concepts {
            Interfaces
            Introduction to Dependency Injection
            Introduction to Strategy Design Pattern
            Exceptions and Errors
            Exception Handling
            Introduction to Unit Testing
            Assertions
            Generic classes
            Annotations
        }
        Reflection {
            What is Reflection?
            Classes and Class object
            * ClassLoader
            Accessing class memebers, methods and fields
            * Arrays and Enumerated types
            * Package Scanner project
        }
        Linux Essentials {
            Basic commands 
            Git commands
        }
        Build Process {
            javac + java exec files
            Making JAR files
            Using made jar files
            Build process
            What is a Build System?
            Ant 
            Maven
            Other build systems
            Maven CLI
            Maven and Eclipse
            Adding Log4j support to our projects
            Aspect Oriented Programming (AOP)
        }
        Context Managers {
            Simple Context Manager
            Spring Context Manager
        }
        Design Patterns {
            What are design patterns?
            Different types of design patterns
            Strategy design pattern
            Subject-Observer design pattern -> Event Handling in Java
            Singleton design pattern 
            Service Locator design pattern
            Factory design pattern
            Abstract Factory design pattern
            Decorator, Wrapper and Adapter patterns
            Inversion of Control (IoC) -> Dependency Injection
            SOLID Principles
        }
        TDD {
            Test Stubs and Mocks
            Mockito framework
        }
        Multithreading {
            Concept
            Threads Interleaving Concept
            Threads Synchronization
            Thread Safety
            Concurrency libraries (Both JSE and other frameworks)
            Executor Service, Thread Pool, Timer
            Multithreading design patterns and DOs/DONOTs
            TDD issues
        }
        Streams and File System {
            Input and Output Streams
            Byte Streams
            FileInputStream class
            FileOutputStream class
            Character Streams
            ASCII, UTF8 and other charsets
            Buffered Streams
            Serialization and Marshaling
            java.io.Serializable
            Binary Serialization
            XML Serialization
            Custom Serialization
            Working with File System
            File and Directory removal
            File and Directory creation
            Enumerating files and directories
            Retrieving information for a file or directory
            TDD issues
        }
        Sockets {
            Network essentials
            What is a Socket?
            TCP and UDP Sockets
            Socket streams
            Multithreading and socket programming
            Architecture of a server program
            Application protocols
            Application protocol design guidelines
            TDD issues
        }
        XML + JSON {
            Some XML parsers for Java -> DOM, SAX, StAX
            Memory and Speed factors
            XML Serialization
            JSON parser for Java
            JSON Serialization
            Parsing HTML, a big disaster!
        }
        Http Client {
           java.net package
           URL and URLConnection classes
           Http Streams
           Apache Commons HTTP
        }
        Regular Expressions {
           What is Regex?
           Java Regex Rules
           java.util.regex package
           Using regex to parse HTML
        }

        Java 8 Features {
          Default Methods (1 hours, 78 hours) {
            Default methods
            Extending current frameworks using Default Methods
            Redeclaration of default methods
            Static interface methods
          }
          Lambda Expressions (1 hours, 79 hours) {
            Functional interfaces
            Aggregate Operations
            Events
            MapReduce
            MethodReference
          }
          Streams (1 hours, 80 hours) {
            Sequential Streams
            Parallel Streams
          }
          Nashorn Javascript Engine (1 hours, 81 hours) {
            Java Scripting API
            Why JavaScript in Java?
            Running Java code from within JavaScript
            Running JavaScript code from within Java
          }
        }
        Security (3 hours, 84 hours) {
          It is a sandbox!
          Java 2 Security Architecture
          Bytecode verifier, Class Loader, Security Manager, Access Controller
          Java Cryptography Architecture (JCA)
          Java Authentication and Authorization Service (JAAS)
          Java Secure Socket Extension (JSSE)
          Java Cryptography Extension (JCE)
          PKI
          Public and private keys
          Certificates
          keytool
          SSL Sockets
          Creating server sockets
          Creating client sockets
          Monitroing connections using Wireshark
        }
        Memory Model in Java (2 hours, 86 hours) {
          Java Memory Model
          Resource management using try-catch statement
        }
        Design Patterns (2 hours, 88 hours) {
          Iterator design pattern
          Facade design pattern
          Proxy design pattern
          DAO (Data Access Object) design pattern [3 hours]
          Deisgn by Contract
          CQS (Command-Query Seperation) Principle
          UAP (Uniform Access Principle)
          Open/Closed Principle
          Option-Operand Principle
          Single Choice Principle (DRY Principle)
          Seperation of Concerns
        }
        Build Process (1 hour, 89 hours) {
          Gradle build system
        }
    }
    JEE {
    ===========> Session 13 has passed. (89 hours has passed.)
        JEE Architecture (2, 91) {
            JEE Application Model
            JEE Multi-tier Application
            EIS Tier
            Business Tier
            Client Tier
            Web Tier
            Java EE Containers
            Application Server: Apache Tomcat, JBoss WildFly, GlassFish, Apache Geronimo, Apache TomEE
        }
        JEE Enterprise Information Systems () {
            JDBC (4, 95) {
                Database Architecture
                Relational Model
                JDBC Framework
                Core interfaces
                Transactions
                Connection Pools: DBCP, BoneCP
                SQL Injection Attack
                TDD issues
            }
            Persistence Frameworks (2, 97) {
                ORMs
                JPA Specification
                JPQL
                iBatis and MyBatis
                Apache Velocity
                Hibernate
                TopLink
            }
            Hibernate (6, 103) {
                Hibernate is JPA compatible
                XML and Annotation based configuration
                HQL
                Entities
                One-To-One, One-To-Many and Many-To-Many relations
                Introduction to Lambda Expressions (Java 8 feature)
                TDD issues
            }         
        }
        JEE Web Tier {
            Web Architecture (6, 109) {
                Introduction to Web Architecture
                Web Server
                Browser
                HTTP Protocol
                Request and Response
                Header and Content
                HTTP State Management
                Query String, POST, Cookie
                Sessions
                File Upload
                MIME Types
                HTML, CSS, JS, jQuery
                AJAX              
                CGI, FastCGI, JavaEE Model (Threads instead of Processes)
                Dynamic and Static web pages
                REST
                WebSocket Technology and Server Sent Events (SSE)
                Web Caching mechanisms
            }
            Servlets (6, 115) {  
                javax.servlets package [2 hours]
                What is Servlet, Filter and Listener?
                A sample Http Servlet
                How servlets work?
                What are Filters? [2 hours]
                A Sample Security Filter
                What are Listeners? [2 hours]
            }
            JSP (4, 119) {
                Why JSP?
                What is JSP?
                TAGLIBs -> JSTL
                How JSP interpreted in an Application Server (AS)?
                JSP Lifecycle
            }
            JEE Web Frameworks and MVC (2, 121) {
                Model 1 and Model 2
                MVC Architecture
                MVC Model2 or MVC2
                MVC and Reflection
                Model, View and Controller
                Pull and Push MVC Frameworks
                Action-based and Component-based MVC frameworks
            }
            Apache Struts (3, 124) {
                Jakarta Projects
                Struts2 is a push-based(Action-based) MVC Framework.
                Apache Tiles
            }
            JSF (4, 128) {
                Pull-based MVC Framework
                JSF is JEE Standard.
                JSF Lifecycle
                JSF Managed Beans
                JSPs as templates for JSF (as JSF view layer)
                Facelets as templates for JSF (as JSF view layer)
                Advantages and disadvantages
            }
            Spring MVC (5, 133) {
                Push-based MVC Framework
            }
            Java Web Template Engines (2, 135) {
                Apache Tiles
                SiteMesh
                FreeMaker
                Thymeleaf
                Facelets
            }
        }
        JEE Business Tier {
            RPC (2, 137) {
                TCP Sockets and RPC
                RMI
                JRMP (Java Remote Method Protocol)
                ORB (Object Request Broker)
                ORB Ports
                Inter-ORB Communication
                GIOP (General Inter-ORB Protocol) Specification
                GIOP Message Types: Request, Reply, Locate Request, Locate Reply, Fragment
                RMI-IIOP (Internet Inter-ORB Protocol)
                IOR (Interoperable Object Reference)
                CORBA (Common Object Request Broker Architect)
                XML-based RPC
                Web Services
                SOAP and RESTFul Web Services
                Comet (WebSocket technology)
                Java Messaging Service (JMS)
            }
            RMI (3, 140) {
                RMI Architecture
                RMI Registry
                RMI Security Manager
                java.rmi package
                Remote Object and Interfaces   
                Proxy Objects
            }
            JNDI (2, 142) {
                JNDI Spec. and Implementations
                Sun implementations for RMI Registry
                JNDI implementations: OpenEJB, JBOSSNS, WebSphere, etc
                JNDI Service Provider Interface (SPI)
                Initial Context
                jndi.properties file
                Object and Data Lookup
            }
            Enterprise JavaBeans (6, 148) {
                EJB is a Java EE specification.
                Older versions of EJB Spec.
                EJB Container
                EJB bundle structure
                ejb-jar.xml descriptor file
                JNDI Spec. and EJB
                Local and Remote interfaces
                Different kinds of EJBs
                Session Beans
                Message Driven Beans
                Transactions and JTA
                Asynch. method invocation via @Asynchronous
                Seucrity issues
            }
            CDI (6, 154) {
                Dependency Injection using @Inject
                beans.xml descriptor file
                Default implementations
                Alternatives
                Qualifiers
                Inspectors and AOP
                @AroundConstrust
                @AroundInvoke
                Bean inspectors
                Class inspectors
                Event inspectors
                Decorators
            }
            JMS (7, 161) {
                JMS Spec.
                MDB (Message Driven Beans)
                JMS Impleemntations
                Provider
                Queues and Topics
                Publisher/Producer
                Subscriber/Consumer
                JMS Message
                Point-to-Point messages
                Publish/Subscribe messaging model
                Asynchornous calls
                HornetQ
                ActiveMQ
                Standalone HornetQ
            }
            Web Services (6, 167) {
                SOAP
                WSDL
                SoapUI Software
                JAX-WS
                JAXB
                Spring-WS
                Apache Axis2
                Apache CXF
                EJB vs Web Services
            }
            RESTful Web Services (3, 170) {
                JAX-RS
                Jersey
            }
            Extra topics (4, 174) {
                EJB Timer Services
                EJB Authorization
            }
        }
        Java Transaction API (5, 179) {
            ACID Properties
            JTA Spec.
            Local Transactions
            Distributed Trasnactions
            Transaction Manager
            Resource Manager
            Transaction Processing Monitor
            Open XA Standard
        }
        Java EE 7 and Java EE 6 (4, 183) {
            WebSocket Technology
            JSON-P Technology
        }
        JMX Technology (5, 188) {
           What is JMX Spec.?
           Management interfaces
           Managed Beans (MBeans)
           JMX Connectors
           JMX Adaptors 
           JConsole
           JMX Remote Debugging
        }
    }
}
